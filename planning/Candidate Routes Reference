Candidate Routes Reference

Only admins are able to get candidate data and/or change it.

Recruiters and attendees can volunteer to be a recruiter.


/candidate/getfName
	Expects 
		.send({candidate_id: candidate._id})
	Returns
		fName

/candidate/getlName
	Expects 
		.send({candidate_id: candidate._id})
	Returns
		lName

/candidate/getEmail
	Expects 
		.send({candidate_id: candidate._id})
	Returns
		email

/candidate/getEvents
	Expects 
		.send({candidate_id: candidate._id})
	Returns
		an array of objects.
		events[i].event_id to get eventID
		events[i].accepted to get the accepted status
		events[i].status to get the status of the candidate for that event
		events[i].name to get the name of the event
		events[i].start_date to get the start date of the event

/candidate/getNote
	Expects 
		.send({candidate_id: candidate._id})
	Returns
		note

/candidate/setfName
	Expects 
		.send({candidate_id: candidate._id,fName:'string x'})

	Changes the candidate fname to x if the user is an admin

/candidate/setlName
	Expects 
		.send({candidate_id: candidate._id,lName:'string x'})

		Changes the candidate lname to x if the user is an admin


/candidate/setEmail
	Expects 
		.send({candidate_id: candidate._id,fName:'string x@x.com'})

	Changes the candidate email to x@x.com if the user is an admin



/candidate/setStatus
	Expects 
		.send({candidate_id: candidate._id,event_id:'x',status:string 'accepted/invited/volunteer'})

	Changes status to a specific event in the candidate file to accepted or invited or volunteer.  Those are the only choices to change it to.

		
/candidate/setEvent
	Expects 
		.send({candidate_id: candidate._id,newEvent:{event_id:event._id,accepted: boolean true/false,status:accepted/invited/volunteer'}})

	Adds a new event to the candidate.  Lets you set the accepted and status field manually.  Default for accepted is false and default for status is volunteer.


/candidate/setAccepted
	Expects 
		.send({candidate_id: candidate._id,event_id:event._id, accepted:string true/false})

	Changes the accepted field in a specific event for a candidate to boolean true or false. 


/candidate/setNote
	Expects 
		.send({candidate_id: candidate._id,note:'string'})_

	Changes the candidate note to string.  Have to be an admin.

/candidate/setCandidate
	Expects 
		.send({fName:'string',lName:'string',email:'string@string.string',status:volunteer/invited/accepted, event_id: event._id,accept_Key:true/false,note:'string'})

	NOTE: this also works for recruiters/attendees.  It only requires their fName, lName, email, and newEvent.  The rest of the fields will be handled by the backend.  If the other items are included they will be ignored.  (So that an attendee can not set them selves as accepted to be a recruiter for a specific event)

	This is the only candidate route that works for recruites/attendees.  The rest are Admin only.


/candidate/deleteCandidate
	Expects 
		.send({candidate_id: candidate._id})

	deletes candidate from the database.