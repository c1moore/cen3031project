"use strict";var ApplicationConfiguration=function(){var applicationModuleName="frank-recruiter-system",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","ngTable","angularjs-dropdown-multiselect","textAngular","flow","ngInputDate","multi-select","dialogs.main","angularSpinner","vcRecaptcha"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("admin"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("events"),ApplicationConfiguration.registerModule("invites"),ApplicationConfiguration.registerModule("leaderboard"),ApplicationConfiguration.registerModule("memoboard"),ApplicationConfiguration.registerModule("problems"),ApplicationConfiguration.registerModule("recruiter-form"),ApplicationConfiguration.registerModule("users"),angular.module("admin").config(["$stateProvider","$urlRouterProvider",function($stateProvider){$stateProvider.state("admin",{url:"/admin",templateUrl:"modules/admin/views/admin.client.view.html"})}]),angular.module("admin").controller("applicationController",["$scope","ngTableParams","$http","eventSelector","$filter","$window","$location","usSpinnerService","$timeout","$sce","$modal","Authentication",function($scope,ngTableParams,$http,eventSelector,$filter,$window,$location,usSpinnerService,$timeout,$sce,$modal,Authentication){if(Authentication.user&&0!==_.intersection(Authentication.user.roles,["admin"]).length){$scope.newCandidateEvents=[],$scope.candidates=[],$scope.selectEvents=[],$scope.statusIsOpen=!1,$scope.candidateStatuses=["volunteer","invited","accepted"];var rowUpdated=!1;$scope.$edit={},$scope.$edit.lName=!1,$scope.$edit.fName=!1,$scope.$edit.row=-1,$scope.$watch("$edit.lName",function(){$timeout(function(){!$scope.$edit.lName&&!$scope.$edit.fName&&$scope.$edit.row>=0&&($scope.$data[$scope.$edit.row].$edit.name=!1,$scope.updateCandidate($scope.$data[$scope.$edit.row]._id,"name"))},100)}),$scope.$watch("$edit.fName",function(){$timeout(function(){!$scope.$edit.lName&&!$scope.$edit.fName&&$scope.$edit.row>=0&&($scope.$data[$scope.$edit.row].$edit.name=!1,$scope.updateCandidate($scope.$data[$scope.$edit.row]._id,"name"))},100)}),$scope.selectSettings={smartButtonMaxItems:3,externalIdProp:"event_id",idProp:"event_id",displayProp:"label"},$scope.tableMsSettings={smartButtonMaxItems:1,externalIdProp:"label",idProp:"label",displayProp:"label"},$scope.$watch(function(){return eventSelector.selectedEvent},function(selectedEvent){$scope.isEventSelected=eventSelector.postEventId?!0:!1,$scope.isEventSelected&&($scope.selectedEvent=eventSelector.selectedEvent,$scope.selectedEvent=selectedEvent,$scope.getCandidates(!0))}),$http.get("/events/enumerateAll").success(function(data){for(var i=0;i<data.length;i++)$scope.selectEvents.push({label:data[i].name,event_id:data[i]._id})}).error(function(){$scope.selectEvents=[],$scope.selectEvents[0]={label:"Error",event_id:"error"}}),$scope.getCandidates=function(eventChanged){$http.post("/candidate/getCandidatesByEvent",{event_id:eventSelector.postEventId}).success(function(data){for(var i=0;i<data.length;i++)data[i].displayName=data[i].lName+", "+data[i].fName;$scope.candidates=[],$scope.candidates=data,rowUpdated=!1}).error(function(error,status){(eventChanged||"No candidates found."===error.message)&&($scope.candidates=[]),401!==status&&"/leaderboard"===$location.path()&&$timeout(function(){$scope.getCandidates()},5e3)})},$scope.addCandidate=function(newCandidate){if($scope.newCandidateEvents.length>0){newCandidate.events=[];for(var i=0;i<$scope.newCandidateEvents.length;i++)newCandidate.events.push($scope.newCandidateEvents[i].event_id);$http.post("/candidate/setCandidate",newCandidate).success(function(){$scope.getCandidates(),$scope.candidateForm.$setPristine(!0),$scope.newCandidate={},$scope.newCanidateEvents=[]}).error(function(res,status){401!==status&&$window.alert("Oops, something bad happened.  We couldn't save the new candidate.  Please make sure all fields are correct and try again.\n\nError: "+res.message+"\nIf this error continues, please <a href='/#!/problems'>report this issue</a>")})}},$scope.acceptCandidate=function(candidate){var postObject={candidate_id:candidate._id,event_id:eventSelector.postEventId,accepted:!0};$http.post("/candidate/setAccepted",postObject).success(function(){$scope.getCandidates()}).error(function(res,status){401!==status&&($scope.getCandidates(),$window.alert("Candidate not updated.  Please try again.\n\n"+res.message+"\nIf this error continues, please <a href='/#!/problems'>report it</a>."))})},$scope.denyCandidate=function(candidate){$http.post("/candidate/deleteCandidate/event",{candidate_id:candidate._id,event_id:eventSelector.postEventId}).success(function(){$scope.getCandidates()}).error(function(res){$scope.getCandidates(),$window.alert("Candidate not updated.  Please try again.\n\nError: "+res.message+"\nIf this error continues, please <a href='/#!/problems'>report it</a>.")})},$scope.$watch("candidates",function(){$timeout(function(){$scope.tableParams.reload()})}),$scope.tableParams=new ngTableParams({page:1,count:5,filter:{fName:""},sorting:{fName:"asc"}},{getData:function($defer,params){var filteredData=params.filter()?$filter("filter")($scope.candidates,params.filter()):$scope.candidates,orderedData=params.sorting()?$filter("orderBy")(filteredData,params.orderBy()):$scope.candidates;params.total(orderedData.length),$scope.$data=orderedData.slice((params.page()-1)*params.count(),params.page()*params.count()),$defer.resolve($scope.$data)}}),$scope.selected={},$scope.selected.emails=[],$scope.selected.ids=[],$scope.email={},$scope.email.errmess=[],$scope.sending=!1,$scope.setSelected=function(_id,email){for(var i=0;i<$scope.selected.ids.length;i++)if($scope.selected.ids[i]===_id)return $scope.selected.ids.splice(i,1),void $scope.selected.emails.splice(i,1);$scope.selected.ids.push(_id),$scope.selected.emails.push(email)},$scope.sendMessages=function(){if($scope.email.error=!1,$scope.email.errmess=[],$scope.email.message||($scope.email.error=!0,$scope.email.errmess.push("Message is required.")),$scope.selected.ids.length||($scope.email.error=!0,$scope.email.errmess.push("At least one recipient is required.")),!$scope.email.error){$scope.sending=!0,usSpinnerService.spin("spinner-2");var body={candidate_ids:$scope.selected.ids,subject:$scope.email.subject,message:$scope.email.message,event_id:eventSelector.postEventId};$http.post("/admin/send",body).success(function(){$scope.selected={},$scope.selected.emails=[],$scope.selected.ids=[],$scope.email={},$scope.email.errmess=[],$scope.selectedCandidates=[],$window.alert("Emails sent!"),usSpinnerService.stop("spinner-2"),$scope.sending=!1}).error(function(response,status){401!==status&&$window.alert("There was an error sending the message.  Please try again later.\n\nError: "+response.message+"\nIf this error continues, please <a href='/#!/problems'>report it</a>."),usSpinnerService.stop("spinner-2"),$scope.sending=!1})}},$scope.$watch("$data",function(){$scope.$data&&$scope.$data.length>0&&(rowUpdated=!0)}),$scope.updateCandidate=function(id,field){if(rowUpdated){for(var index=-1,i=0;i<$scope.$data.length;i++)$scope.$data[i]._id===id&&(index=i);if(-1!==index)if("name"===field)$http.post("/candidate/setfName",{fName:$scope.$data[index].fName,candidate_id:$scope.$data[index]._id}).success(function(){$scope.getCandidates()}).error(function(res,status){401!==status&&($scope.getCandidates(),$window.alert("Error occurred while updating "+$scope.$data[index].fName+"'s name.\n\nError: "+res.message+"\nIf this error continues, please <a href='/#!/problems'>report it</a>."))}),$http.post("/candidate/setlName",{lName:$scope.$data[index].lName,candidate_id:$scope.$data[index]._id}).success(function(){$scope.getCandidates()}).error(function(res,status){401!==status&&($scope.getCandidates(),$window.alert("Error occurred while updating "+$scope.$data[index].fName+"'s name.\n\nError: "+res.message+"\nIf this error continues, please <a href='/#!/problems'>report it</a>."))});else{var address="/candidate/set"+field,data={};data.candidate_id=$scope.$data[index]._id,"Status"===field?(data[field.toLowerCase()]=$scope.$data[index].events[field.toLowerCase()],data.event_id=eventSelector.postEventId):data[field.toLowerCase()]=$scope.$data[index][field.toLowerCase()],$http.post(address,data).success(function(){$scope.getCandidates()}).error(function(res,status){401!==status&&($scope.getCandidates(),$window.alert("Error occurred while updating "+$scope.$data[index].fName+"'s record.\n\nError: "+res.message+"\nIf this error continues, please <a href='/#!/problems'>report it</a>."))})}else $scope.getCandidates(),$window.alert("Candidate could not be found.  Refresh the page and try again.\nIf this error continues, please <a href='/#!/problems'>report it</a>.")}},$scope.inviteRecruiter=function(){$modal.open({templateUrl:"modules/admin/views/inviteRecruiter.client.view.html",controller:"RecruiterInvitationCtrl",backdrop:"static",keyboard:!1})}}else $location.path(Authentication.user?"/":"/signin")}]),angular.module("admin").controller("RecruiterInvitationCtrl",["$scope","$modalInstance","$http","eventSelector","$location","usSpinnerService",function($scope,$modalInstance,$http,eventSelector,$location,usSpinnerService){$scope.event={name:eventSelector.selectedEvent,id:eventSelector.postEventId},$scope.invite={subject:"We Want You to Be Our Next Great Recruiter"},$scope.editorMode=!0,$scope.sending=!1,$scope.sentMode=!1,$scope.error=!1;var link="http://"+$location.host()+"/#!/recruiter/form",linkHtml="<a href='"+link+"'>"+link+"</a>",linkRegex=/#link#/g;$scope.spinnerOpts={lines:11,length:12,width:5,radius:14,corners:.5,opacity:.05,shadow:!0,color:["#73c92d","#f7b518","#C54E90"]},$scope.sendInvite=function(){usSpinnerService.spin("admin-new-recruiter-spinner-1"),$scope.editorMode=$scope.sentMode=!1,$scope.sending=!0,$scope.error=!1;var invite={};angular.extend(invite,$scope.invite),invite.message=_.escape(invite.message),-1===invite.message.search(linkRegex)?invite.message+="\n\nYou can sign up at "+linkHtml:invite.message=invite.message.replace(linkRegex,linkHtml),invite.message=invite.message.replace(/\n/g,"<br />"),invite.emails=invite.emails.split(/, */g),invite.event_id=eventSelector.postEventId,$http.post("/send/nonuser",invite).success(function(){$scope.sending=!1,$scope.sentMode=!0,$scope.invite={subject:"We Want You to Be Our Next Great Recruiter"},usSpinnerService.stop("admin-new-recruiter-spinner-1")}).error(function(res){$scope.error=res.message+"  Error: "+res.error.code,$scope.sending=!1,$scope.editorMode=!0,usSpinnerService.stop("admin-new-recruiter-spinner-1")})},$scope.done=function(){$modalInstance.close()}}]),angular.module("admin").controller("adminAttendeesController",["$scope","ngTableParams","$http","$filter","eventSelector","$modal","$window","$timeout","Authentication","$location",function($scope,ngTableParams,$http,$filter,eventSelector,$modal,$window,$timeout,Authentication,$location){if(Authentication.user&&0!==_.intersection(Authentication.user.roles,["admin"]).length){$scope.attendees=[],$scope.isEventSelected=eventSelector.postEventId?!0:!1,$scope.tabErr=!1,$scope.$watch(function(){return eventSelector.postEventId},function(){$scope.isEventSelected=eventSelector.postEventId?!0:!1,$scope.isEventSelected&&getAttendees()});var getAttendees=function(){$scope.tabErr=!1,$http.post("/event/users",{event_id:eventSelector.postEventId}).success(function(res){$scope.attendees=res,$scope.attendeeTableParams.reload()}).error(function(res,status){400===status&&"No users found for this event."===res.message?$scope.tabErr=res.message:401!==status&&"/admin"===$location.path()&&$timeout(function(){$scope.getCandidates()},5e3)})};$scope.attendeeTableParams=new ngTableParams({page:1,count:10,filter:{displayName:""},sorting:{displayName:"asc"}},{getData:function($defer,params){var filteredData=params.filter()?$filter("filter")($scope.attendees,params.filter()):$scope.attendees,orderedData=params.sorting()?$filter("orderBy")(filteredData,params.orderBy()):$scope.attendees;params.total(orderedData.length),$defer.resolve(orderedData.slice((params.page()-1)*params.count(),params.page()*params.count()))}});var deleteAttendee=function(aid,aname){$http.post("/remove",{user_id:aid}).success(function(){getAttendees()}).error(function(res){$window.alert("There was an error deleting "+aname+"'s account.\n\nError: "+res.message+"\nIf this error continues, please <a href='/#!/problems'>report it</a>."),getAttendees()})},removeEventPermissions=function(aid,aname){$http.post("/user/inactivate",{user_id:aid,event_id:eventSelector.postEventId}).success(function(){getAttendees()}).error(function(res){$window.alert("There was an error removing permissions for "+aname+".\n\nError: "+res.message+"\nIf this error continues, please <a href='/#!/problems'>report it</a>."),getAttendees()})},removeAllPermissions=function(aid,aname){$http.post("/user/inactivate/all",{user_id:aid}).success(function(){getAttendees()}).error(function(res){$window.alert("There was an error removing permissions for "+aname+".\n\nError: "+res.message+"\nIf this error continues, please <a href='/#!/problems'>report it</a>."),getAttendees()})};$scope.deleteAttendee=function(attendee){var modalInstance=$modal.open({templateUrl:"modules/admin/views/attendee-warn-delete.client.view.html",controller:"attendeeDeleteModalCtrl",backdrop:!0,backdropClass:"admin-backdrop",resolve:{attendee:function(){return attendee}}});modalInstance.result.then(function(result){result&&deleteAttendee(attendee._id,attendee.fName+" "+attendee.lName)})},$scope.removeAttendee=function(attendee){var actionFlags=[0,1,2],modalInstance=$modal.open({templateUrl:"modules/admin/views/attendee-warn-inactive.client.view.html",controller:"attendeeActionModalCtrl",backdrop:!0,backdropClass:"admin-backdrop",resolve:{flags:function(){return actionFlags},attendee:function(){return attendee}}});modalInstance.result.then(function(result){switch(result=parseInt(result,10)){case actionFlags[0]:break;case actionFlags[1]:removeEventPermissions(attendee._id,attendee.fName);break;case actionFlags[2]:removeAllPermissions(attendee._id,attendee.fName)}})}}else $location.path(Authentication.user?"/":"/signin")}]),angular.module("admin").controller("attendeeActionModalCtrl",["$scope","$modalInstance","attendee","flags","eventSelector",function($scope,$modalInstance,attendee,flags,eventSelector){$scope.attendee=attendee,$scope.event=eventSelector.selectedEvent,$scope.flags=flags,$scope.selection=flags[0],$scope.done=function(action){action=parseInt(action,10);var flag=action?$scope.selection:$scope.flags[0];$modalInstance.close(flag)}}]),angular.module("admin").controller("attendeeDeleteModalCtrl",["$scope","$modalInstance","attendee",function($scope,$modalInstance,attendee){$scope.attendee=attendee,$scope.done=function(action){action=parseInt(action,10),$modalInstance.close(action?!0:!1)}}]),angular.module("admin").controller("eventController",["$scope","ngTableParams","$http","$timeout","$filter","$modal","$window","Authentication","$location","eventSelector",function($scope,ngTableParams,$http,$timeout,$filter,$modal,$window,Authentication,$location,eventSelector){if(Authentication.user&&0!==_.intersection(Authentication.user.roles,["admin"]).length){$scope.events=[];var toDate=function(element){element.start_date&&element.end_date&&(element.start_date=new Date(element.start_date),element.end_date=new Date(element.end_date))},getEvents=function(){$http.get("/events/enumerateAll").success(function(data){$scope.events=[],data.forEach(toDate),$scope.events=data})};getEvents(),$scope.tableParams=new ngTableParams({page:1,count:10,filter:{name:""},sorting:{name:"asc"}},{getData:function($defer,params){var filteredData=params.filter()?$filter("filter")($scope.events,params.filter()):$scope.events,orderedData=params.sorting()?$filter("orderBy")(filteredData,params.orderBy()):$scope.events;params.total(orderedData.length),$defer.resolve(orderedData.slice((params.page()-1)*params.count(),params.page()*params.count()))}}),$scope.$watch("events",function(){$scope.tableParams.reload()}),$scope.addEvent=function(newEvent){newEvent.start_date=new Date(newEvent.start_date).getTime(),newEvent.end_date=new Date(newEvent.end_date).getTime(),$http.post("/events/create",newEvent).success(function(){getEvents(),$scope.newEvent=null,$scope.eventForm.$setPristine(!0),eventSelector.eventSelect()}).error(function(response,status){401!==status&&$window.alert("There was an error adding "+newEvent.name+".  Please make sure all information is correct and try again.\n\nError: "+response.message+"\nIf this error continues, please <a href='/#!/problems'>report it</a>.")})},$scope.updateEvent=function(event){event.start_date=new Date(event.start_date).getTime(),event.end_date=new Date(event.end_date).getTime(),$http.post("/events/setEventObj",{event_id:event._id,event:event}).success(function(){getEvents(),eventSelector.eventSelect()}).error(function(response,status){401!==status&&(getEvents(),$window.alert("There was an error updating "+event.name+".  Please make sure all information is correct and try again.\n\nError: "+response.message+"\nIf this error continues, please <a href='/#!/problems'>report it</a>."))})},$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.openS=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.openedS=!0},$scope.openE=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.openedE=!0},$scope.dateOptions={formatYear:"yy",startingDay:1};var deleteEvent=function(event){$http.post("/events/delete",{event_id:event._id}).success(function(){getEvents(),eventSelector.eventSelect()}).error(function(res,status){401!==status&&(getEvents(),$window.alert("An error occurred while deleting "+event.name+".\n\nError: "+res.message+"\nIf this error continues, please <a href='/#!/problems'>report it</a>."))})};$scope.deleteEvent=function(event){var modalInstance=$modal.open({templateUrl:"modules/admin/views/event-warn-delete.client.view.html",controller:"eventDeleteModalCtrl",backdrop:!0,backdropClass:"admin-backdrop",resolve:{event:function(){return event}}});modalInstance.result.then(function(result){result&&deleteEvent(event)})};var inactivateEvent=function(eid,ename){$http.post("events/inactivate",{event_id:eid}).success(function(){getEvents()}).error(function(res,status){401!==status&&(getEvents(),$window.alert("An error occurred while disabling "+ename+".\n\nError: "+res.message+"\nIf this error continues, please <a href='/#!/problems'>report it</a>."))})};$scope.inactivateEvent=function(event){var modalInstance=$modal.open({templateUrl:"modules/admin/views/event-warn-inactivate.client.view.html",controller:"eventInactivateModalCtrl",backdrop:!0,backdropClass:"admin-backdrop",resolve:{event:function(){return event}}});modalInstance.result.then(function(result){result&&inactivateEvent(event._id,event.name)})}}else $location.path(Authentication.user?"/":"/signin")}]),angular.module("admin").controller("eventDeleteModalCtrl",["$scope","$modalInstance","event",function($scope,$modalInstance,event){$scope.event=event,$scope.done=function(action){action=parseInt(action,10),$modalInstance.close(action?!0:!1)}}]),angular.module("admin").controller("eventInactivateModalCtrl",["$scope","$modalInstance","event",function($scope,$modalInstance,event){$scope.event=event,$scope.done=function(action){action=parseInt(action,10),$modalInstance.close(action?!0:!1)}}]),angular.module("admin").controller("recruitersController",["$scope","ngTableParams","$http","$filter","eventSelector","$modal","$window","$timeout","Authentication","$location",function($scope,ngTableParams,$http,$filter,eventSelector,$modal,$window,$timeout,Authentication,$location){if(Authentication.user&&0!==_.intersection(Authentication.user.roles,["admin"]).length){$scope.recruiters=[],$scope.isEventSelected=eventSelector.postEventId?!0:!1,$scope.tabErr=!1,$scope.$watch(function(){return eventSelector.postEventId},function(){$scope.isEventSelected=eventSelector.postEventId?!0:!1,$scope.isEventSelected&&getRecruiters()});var getRecruiters=function(){$http.get("/event/recruiters",{params:{event_id:eventSelector.postEventId}}).success(function(res){$scope.tabErr=!1;for(var i=0;i<res.length;i++){var j;for(j=0;j<res[i].rank.length;j++)if(res[i].rank[j].event_id.toString()===eventSelector.postEventId.toString()){res[i].rank=res[i].rank[j].place;break}j===res[i].rank.length&&(res[i].rank="0")}$scope.recruiters=res,$scope.recruiterTableParams.reload()}).error(function(res,status){400===status&&"No recruiters found for this event."===res.message?$scope.tabErr=res.message:401!==status&&"/leaderboard"===$location.path()&&$timeout(function(){$scope.getCandidates()},5e3)})};$scope.recruiterTableParams=new ngTableParams({page:1,count:10,filter:{},sorting:{displayName:"asc"}},{getData:function($defer,params){var filteredData=params.filter()?$filter("filter")($scope.recruiters,params.filter()):$scope.recruiters,orderedData=params.sorting()?$filter("orderBy")(filteredData,params.orderBy()):$scope.recruiters;params.total(orderedData.length),$defer.resolve(orderedData.slice((params.page()-1)*params.count(),params.page()*params.count()))}});var removeRecruiter=function(rid,rname){$http.post("/remove/Recruiter",{user_id:rid,event_id:eventSelector.postEventId}).success(function(){getRecruiters()}).error(function(res,status){401!==status&&(getRecruiters(),$window.alert("There was an error removing "+rname+"'s recruiter role.\n\n"+res.message+"\nIf this error continues, please <a href='/#!/problems'>report this issue</a>"))})},deleteRecruiter=function(rid,rname){$http.post("/remove",{user_id:rid}).success(function(){getRecruiters()}).error(function(res,status){401!==status&&(getRecruiters(),$window.alert("There was an error deleting "+rname+"'s account.\n\nError: "+res.message+"\nIf this error continues, please <a href='/#!/problems'>report this issue</a>"))})};$scope.removeRecruiter=function(recruiter){var flags=[0,1,2],modalInstance=$modal.open({templateUrl:"modules/admin/views/recruiterWarn.client.view.html",controller:"actionModalCtrl",backdrop:!0,backdropClass:"admin-backdrop",resolve:{flags:function(){return[0,1,2]},recruiter:function(){return recruiter}}});modalInstance.result.then(function(result){switch(result=parseInt(result)){case flags[0]:break;case flags[1]:removeRecruiter(recruiter._id,recruiter.fName);break;case flags[2]:deleteRecruiter(recruiter._id,recruiter.fName)}})}}else $location.path(Authentication.user?"/":"/signin")}]),angular.module("admin").controller("actionModalCtrl",["$scope","$modalInstance","flags","recruiter",function($scope,$modalInstance,flags,recruiter){$scope.flags=flags,$scope.recruiter=recruiter,$scope.cancel=!0,$scope.selection=$scope.flags[0],$scope.done=function(action){var flag=action?$scope.flags[0]:$scope.selection;$modalInstance.close(flag)}}]),angular.module("admin").directive("multiselect",["$q","$timeout",function($q,$timeout){return{require:"ngModel",link:function(scope,elm,attrs,ctrl){ctrl.$asyncValidators.username=function(modelValue){if(ctrl.$isEmpty(modelValue))return $q.when();var def=$q.defer();return $timeout(function(){-1===usernames.indexOf(modelValue)?def.resolve():def.reject()},2e3),def.promise}}}}]),angular.module("core").config(["flowFactoryProvider",function(flowFactoryProvider){flowFactoryProvider.defaults={target:"/comments/uploadRecruiterImage",uploadMethod:"POST"},flowFactoryProvider.on("catchAll",function(event){console.log(event),console.log("catchAll",arguments)})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus","$filter","eventSelector",function($scope,Authentication,Menus,$filter,eventSelector){$scope.authentication=Authentication,$scope.userRoles=["recruiter","admin"],$scope.leaderboardRoles=["recruiter","admin"],$scope.inviteRoles=["recruiter","admin"],$scope.memoRoles=["recruiter","admin","attendee"],$scope.eventsRoles=["attendee","recruiter"],$scope.adminRoles=["admin"],$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.eventSelector=eventSelector,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$scope.hideLink=function(rolesNeeded){if(!$scope.authentication.user)return!0;if("string"==typeof rolesNeeded){if("*"===rolesNeeded)return!1;rolesNeeded=rolesNeeded.split(",")}else if("*"===rolesNeeded[0])return!1;return 0===$filter("roles")($scope.authentication.user.roles,rolesNeeded).length?!0:!1}}]),angular.module("core").controller("HomeController",["$scope","Authentication","$filter","$location","eventSelector",function($scope,Authentication,$filter,$location){return $scope.authentication=Authentication,$scope.authentication.user?($scope.userRoles=$scope.authentication.user.roles,void($scope.data={buttons:[{name:"Admin Page",description:"A place where admins can fulfill their fantasies of being all-powerful.",link:"/#!/admin",roles:["admin"],image:"/modules/core/img/icons/admin.png"},{name:"Control Room",description:"Send out your invitations and see your invitation stats.",link:"/#!/invite",roles:["recruiter","admin"],image:"/modules/core/img/icons/invites.png"},{name:"Leaderboard",description:"See how your friends and competitors rank against you.",link:"/#!/leaderboard",roles:["recruiter","admin"],image:"/modules/core/img/icons/leaderboard.png"},{name:"frank Lounge",description:"Take a look at what people are saying about the events you are attending and weigh in on the chatter.",link:"/#!/franklounge",roles:["admin","recruiter","attendee"],image:"/modules/core/img/icons/frank_lounge.png"},{name:"Recruiter Registration",description:"Think you got what it takes to be a recruiter for frank?  Then sign up here.  Warning: we only accept the best.",link:"/#!/events",roles:["recruiter","attendee"],titleId:"recruiter-request-button-title",image:"/modules/core/img/icons/recruiter_registration.png"},{name:"Register",description:"Register to attend frank 2016.",link:"https://frank2016.eventbrite.com/",roles:["recruiter","admin"],image:"/modules/core/img/icons/register.png"}]})):void $location.path("/signin")}]),angular.module("core").directive("comment",[function(){var commentDefinition={template:'<div class="frank-comment" ng-transclude></div>',restrict:"E",replace:!0,transclude:!0};return commentDefinition}]),angular.module("core").directive("commentHeader",["$http","$window",function($http,$window){var commentHeaderDefinition={restrict:"E",scope:{author:"@authorName",time:"@postTime",image:"@authorImage",removable:"@",removeAddress:"@",commentId:"@",commentsArr:"=",arrIndex:"="},replace:!0,template:"<div class='frank-comment-header'><div ng-if='image' class='frank-comment-image-container'><img src='{{image}}' class='frank-comment-image' /></div><div class='frank-comment-author'><span>{{author}}</span></div><div class='frank-comment-time'><span>{{time}}</span></div><div ng-if='removable' class='frank-comment-remove'><a href='#' class='frank-comment-remove-icon' ng-click='removeComment()'><i class='fa fa-remove text-danger'></i></a></div></div>",link:function($scope){$scope.removeComment=function(){$http.post($scope.removeAddress,{comment_id:$scope.commentId}).success(function(){$scope.commentsArr.splice($scope.arrIndex,1)}).error(function(){$window.alert("There was an error deleting this comment.  Please try again.")})}}};return commentHeaderDefinition}]),angular.module("core").directive("commentBody",[function(){var commentBodyDefinition={restrict:"E",transclude:!0,replace:!0,template:"<div class='frank-comment-body'><div class='frank-comment-message'><span ng-bind-html='comment'></span></div></div>",scope:{comment:"=commentBody"}};return commentBodyDefinition}]),angular.module("core").directive("commentFooter",[function(){var commentFooterDefinition={restrict:"E",transclude:!0,replace:!0,scope:{interests:"=",interestsMapper:"="},template:"<div class='frank-comment-footer'><div class='frank-comment-interests'><div ng-repeat='interest in interests' class='frank-comment-footer-img-container'><img src='{{interestsMapper[interest]}}' alt='interest' class='frank-comment-footer-img' /></div></div></div>"};return commentFooterDefinition}]),angular.module("core").directive("commentEditor",["$compile","$timeout","eventSelector","$window","$http","Authentication",function($compile,$timeout,eventSelector,$window,$http,Authentication){var commentEditorDefinition={restrict:"E",replace:!0,scope:{newComment:"=commentContent",expanded:"=",files:"=files",postAddress:"@",commentsArr:"=",refresh:"&",interestsEnabled:"@",interests:"=?",selectedInterests:"=?"},template:"<form class='frank-comment-editor' ng-submit='postComment()'><div class='frank-comment-editor-compressed' ng-click='toggleExpanded()' ng-hide='expanded'>Click to comment...</div><div class='frank-comment-editor-expanded' ng-show='expanded' flow-init flow-name='uploader.flowInstance' flow-file-added='!!{jpg:1,gif:1,png:1,tiff:1,jpeg:1}[$file.getExtension()]' flow-complete='flowComplete()' flow-file-error='flowError()'><div text-angular ng-model='comment.content' ta-toolbar=\"[['undo', 'redo'], ['ul', 'ol', 'quote'], ['bold', 'italics', 'underline'], ['insertLink', 'insertVideo']]\" ></div><span class='btn btn-default frank-comment-editor-img-uploader' flow-btn><i class='fa fa-camera'></i></span><div class='frank-comment-editor-preview-container'><div class='frank-comment-editor-preview' ng-repeat='file in $flow.files'><img class='frank-comment-editor-preview-img' flow-img='file' ng-mouseover='showOverlay = $index' /><div ng-class='{\"frank-comment-editor-preview-overlay\" : showOverlay===$index, \"frank-comment-editor-preview-overlay-hidden\" : showOverlay!==$index}' ng-click='file.cancel()' ng-mouseleave='showOverlay = -1'><i class='fa fa-remove'></i></div></div></div><div class='frank-comment-editor-submit' ng-class='{\"frank-comment-editor-submit-higher\" : uploader.flowInstance.files.length}'><input type='submit' value='Post' class='btn btn-primary' ng-disabled=\"!eventSelector.postEventId\" /></div><div ng-if='interestsEnabled' multi-select='' input-model='interests' max-height='72px' output-model='comment.interests' button-label='icon name' item-label='icon name' tick-property='ticked' selection-mode='multiple' max-labels='2' helper-elements='none reset filter' default-label='Select Tag...'></div></div></form>",link:function($scope){$scope.showOverlay=-1,$scope.toggleExpanded=function(){$scope.expanded=!$scope.expanded},$timeout(function(){var imgbut=angular.element(".frank-comment-editor-img-uploader").detach();angular.element(".ta-toolbar .btn-group:last").append(imgbut);var multiselect=angular.element(".multiSelect").detach();angular.element(".ta-toolbar").append(multiselect),
angular.element(".ta-toolbar .multiSelect").removeAttr("type")}),angular.element(".ta-toolbar button").removeAttr("ng-disabled"),angular.element(".ta-toolbar button").removeAttr("unselectable"),$timeout(function(){angular.element(".ta-toolbar button").removeAttr("disabled")},100),angular.element(".ta-root").on("focusout",function(){$scope.$apply(function(){$timeout(function(){angular.element(".ta-toolbar button").removeAttr("disabled")},10)})})},controller:function($scope){$scope.uploader={},$scope.comment={},$scope.newComment=$scope.comment.content="",$scope.eventSelector=eventSelector,$scope.interestsEnabled&&($scope.comment.interests=$scope.selectedInterests),$scope.postComment=function(){if($scope.uploader.flowInstance.getSize()>2097152)$window.alert("We can't handle all the awesomeness from your pictures.  Try removing a few or if you only have 1, try cropping it.");else if($scope.comment.content||$scope.uploader.flowInstance.files.length){for(var now=Date.now(),i=0;i<$scope.uploader.flowInstance.files.length;i++)$scope.uploader.flowInstance.files[i].name=Authentication.user._id+eventSelector.selectedEvent+now+i+"."+$scope.uploader.flowInstance.files[i].getExtension();$scope.uploader.flowInstance.opts.query={event_id:eventSelector.postEventId},$scope.uploader.flowInstance.opts.testChunks=!1,$scope.uploader.flowInstance.opts.permanentErrors=[400,401,404,415,500,501];var flowErr=!1;$scope.flowError=function(){flowErr=!0,$window.alert("There was an error uploading your images.  Only <b>images</b> smaller than 2MB are allowed.")},$scope.flowComplete=function(){if(!flowErr){for(var commentWithImg=$scope.comment.content,i=0;i<$scope.uploader.flowInstance.files.length;i++)commentWithImg+="<div class='frank-comment-pic-container'><img class='frank-comment-pic' src='img/recruiter/"+$scope.uploader.flowInstance.files[i].name+"' /></div>";var interestsArr=[];if($scope.interestsEnabled)for(var i=0;i<$scope.comment.interests.length;i++)interestsArr.push($scope.comment.interests[i].name);$http.post($scope.postAddress,{comment:commentWithImg,event_id:eventSelector.postEventId,interests:interestsArr}).success(function(){if($scope.refresh(),$scope.comment.content="",$scope.expanded=!1,$scope.uploader.flowInstance.cancel(),$scope.interestsEnabled)for(var i=0;i<$scope.interests.length;i++)$scope.interests[i].ticked=!1}).error(function(){$window.alert("This is embarrassing!  We couldn't post your comment.  Please try again.")})}},$scope.uploader.flowInstance.upload()}else $window.alert("Don't forget to add some of your deep thoughts before posting a comment.")}}};return commentEditorDefinition}]),angular.module("core").filter("roles",function(){return function(data,rolesNeeded){var contains=function(array,needle){for(var x in array)if(array[x]===needle)return!0;return!1},objectContaining=function(element){for(var x in rolesNeeded)if(contains(element.roles,rolesNeeded[x]))return!0;return!1},arrayContaining=function(element){return contains(rolesNeeded,element)};return null===data||null===rolesNeeded?[]:angular.equals(data,rolesNeeded)?rolesNeeded:data.filter("object"==typeof data[0]?objectContaining:arrayContaining)}}),angular.module("core").factory("cacheService",["$http","storageService",function($http,storageService){return{getData:function(key){return storageService.get(key)},setData:function(key,data){storageService.save(key,data)},removeData:function(key){storageService.remove(key)}}}]),angular.module("core").service("eventSelector",["$rootScope","$http","$location","cacheService","Authentication","$window","$timeout",function($rootScope,$http,$location,cacheService,Authentication,$window,$timeout){var thisService=this,cache=cacheService;this.events=[],this.selectedEvent="Select Event",this.postEventId=null,this.numRecruiting=0,this.recruiterEvent=!0,this.nresDisabled=!1,this.disabled=!1,this.admin=!1;var put=function(key,value){cache.setData(key,value)};this.hideEventSelector=function(){var path=$location.path();return"/signin"===path||"/settings/profile"===path||"/settings/password"===path||!Authentication.user},thisService.eventSelect=function(){if(_.intersection(Authentication.user.roles,["admin"]).length>0){thisService.admin=!0;var checkEvent=function(needle){for(var i=0;i<thisService.events.length;i++)if(thisService.events[i]._id===needle)return i;return!1},getEvents=function(){$http.get("/users/events").success(function(data){thisService.events=data;var index,cachedEvent=cache.getData("selectedEvent"),cachedId=cache.getData("eventId"),cachedUI=cache.getData("ui");cachedEvent&&"undefined"!=cachedEvent&&cachedId&&"undefined"!=cachedId&&thisService.events.length&&(index=checkEvent(cachedId))&&cachedUI&&cachedUI===Authentication.user._id?(thisService.selectedEvent=thisService.events[index].name,thisService.postEventId=thisService.events[index]._id):(thisService.selectedEvent=thisService.events[0].name,thisService.postEventId=thisService.events[0]._id,put("selectedEvent",thisService.events[0].name),put("eventId",thisService.events[0]._id),put("ui",Authentication.user._id))}).error(function(error,status){thisService.selectedEvent="Error",401!==status&&$timeout(function(){getEvents()},5e3)})};getEvents(),thisService.changeEvent=function(event){thisService.selectedEvent=event.name,thisService.postEventId=event._id,put("selectedEvent",event.name),put("eventId",event._id)},thisService.showDivider=function(){return!1}}else{var restrictedPaths=["/invite","/leaderboard"];$rootScope.$on("$locationChangeSuccess",function(){for(var current_path=$location.path(),i=0;i<restrictedPaths.length;i++)if(current_path===restrictedPaths[i]){thisService.nresDisabled=!0;break}i===restrictedPaths.length&&(thisService.nresDisabled=!1)});var checkEvent=function(needle){for(var i=0;i<thisService.events.length;i++)if(thisService.events[i].event_id._id===needle)return i;return!1},getEvents=function(){$http.get("/users/events").success(function(data){thisService.events=data.status,console.log(data);for(var i=0;i<thisService.events.length;i++)thisService.events[i].event_id.recruiter&&thisService.numRecruiting++;var index,cachedEvent=cache.getData("selectedEvent"),cachedId=cache.getData("eventId"),cachedUI=cache.getData("ui");cachedEvent&&"undefined"!=cachedEvent&&cachedId&&"undefined"!=cachedId&&thisService.events.length&&(index=checkEvent(cachedId))&&cachedUI&&cachedUI===Authentication.user._id?(thisService.selectedEvent=thisService.events[index].event_id.name,thisService.postEventId=thisService.events[index].event_id._id,thisService.recruiterEvent=thisService.events[index].recruiter):(thisService.selectedEvent=thisService.events[0].event_id.name,thisService.postEventId=thisService.events[0].event_id._id,thisService.recruiterEvent=thisService.events[0].recruiter,put("selectedEvent",thisService.events[0].event_id.name),put("eventId",thisService.events[0].event_id._id),put("recruiterEvent",thisService.recruiterEvent),put("ui",Authentication.user._id))}).error(function(error,status){400===status&&(thisService.selectedEvent="Error",thisService.disabled=!thisService.disabled),401!==status&&$timeout(function(){getEvents()},5e3)})};getEvents(),thisService.changeEvent=function(event){thisService.selectedEvent=event.event_id.name,thisService.postEventId=event.event_id._id,thisService.recruiterEvent=event.recruiter,put("selectedEvent",event.event_id.name),put("eventId",event.event_id._id),put("recruiterEvent",thisService.recruiterEvent)},thisService.showDivider=function(){return thisService.numRecruiting>0&&thisService.events.length>thisService.numRecruiting}}},""!=$window.user&&thisService.eventSelect()}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").factory("storageService",["$cacheFactory",function(){return{get:function(key){return localStorage.getItem(key)},save:function(key,data){localStorage.setItem(key,data)},remove:function(key){localStorage.removeItem(key)},clearAll:function(){localStorage.clear()}}}]),angular.module("events").config(["$stateProvider","$urlRouterProvider",function($stateProvider){$stateProvider.state("events",{url:"/events",templateUrl:"modules/events/views/events.client.view.html"})}]),angular.module("events").controller("userEventCtrl",["$scope","ngTableParams","$http","eventSelector","$filter","dialogs","Authentication","$timeout","$window","$modal","$location",function($scope,ngTableParams,$http,eventSelector,$filter,dialogs,Authentication,$timeout,$window,$modal,$location){if(Authentication.user&&0!==_.intersection(Authentication.user.roles,["admin","recruiter","attendee"]).length){$scope.user=Authentication,$scope.dpOpen=!1,$scope.openDatepicker=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.dpOpen=!0};var getEvents=function(){$http.post("/events/user/allEvents").success(function(data){$scope.events=[],$scope.events=data;for(var i=0;i<$scope.events.length;i++)$scope.events[i].date=$filter("date")($scope.events[i].start_date,"EEEE, MMMM d, yyyy")+" - "+$filter("date")($scope.events[i].end_date,"EEEE, MMMM d, yyyy")+" "+$filter("date")($scope.events[i].start_date,"M/d/yyyy")+" - "+$filter("date")($scope.events[i].end_date,"M/d/yyyy"),$scope.events[i].start_date=$filter("date")($scope.events[i].start_date,"EEE, MMM d, yyyy"),$scope.events[i].end_date=$filter("date")($scope.events[i].end_date,"EEE, MMM d, yyyy")}).error(function(error,status){401!==status&&"/events"===$location.path()&&$timeout(function(){getEvents()},5e3)})};getEvents(),$scope.tableParams=new ngTableParams({page:1,count:10,filter:{name:""},sorting:{name:"asc"}},{getData:function($defer,params){var filteredData=params.filter()?$filter("filter")($scope.events,params.filter()):$scope.events,orderedData=params.sorting()?$filter("orderBy")(filteredData,params.orderBy()):$scope.events;orderedData?(params.total(orderedData.length),$defer.resolve(orderedData.slice((params.page()-1)*params.count(),params.page()*params.count()))):(params.total(0),$defer.resolve(null))}}),$scope.$watch("events",function(){$timeout(function(){$scope.tableParams.reload()})}),$scope.launch=function(event){var modalInstance=$modal.open({templateUrl:"modules/events/views/recruiter-form.client.view.html",controller:"FormModalCtrl",backdrop:"static",keyboard:!1,resolve:{event:function(){return event}}});modalInstance.result.then(function(answers){answers&&getEvents()})},$scope.capitalize=function(string,lower){return(lower?string.toLowerCase():string).replace(/(?:^|\s)\S/g,function(a){return a.toUpperCase()})}}else $location.path(Authentication.user?"/":"/signin")}]),angular.module("events").controller("FormModalCtrl",["$scope","$modalInstance","event","usSpinnerService","$http",function($scope,$modalInstance,event,usSpinnerService,$http){$scope.event=event,$scope.answers={},$scope.answers.reason="",$scope.answers.connection="",$http.post("/candidate/me").success(function(candidate,status){if(200===status&&candidate.note){var startRegex=/\*\*\*\*\*\*\*\*\*\*/,endRegex=/\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*/,reasonRegex=/\*\*\*Reason:/,connRegex=/\*\*\*Connections:/,skillsRegex=/\*\*\*Recruiter Skills:/;if(-1!==candidate.note.search(startRegex)){var rindex=candidate.note.search(reasonRegex);-1!==rindex&&(rindex+=11);var rend,cindex=candidate.note.search(connRegex);-1!==cindex&&(rend=cindex-2,cindex+=16);var cend,sindex=candidate.note.search(skillsRegex);-1!==sindex&&(cend=sindex-2,sindex+=21);var send=candidate.note.search(endRegex);-1!==rindex&&cindex>rindex&&send>sindex&&sindex>cindex&&($scope.answers.reason=candidate.note.substring(rindex,rend),$scope.answers.connection=candidate.note.substring(cindex,cend))}}}),$scope.spinnerOpts={lines:11,length:12,width:5,radius:14,corners:.5,opacity:.05,shadow:!0,color:["#73c92d","#f7b518","#C54E90"]},$scope.sending=!1,$scope.tabs=[],$scope.tabs[0]=!0,$scope.tabs[1]=!1,$scope.tabs[2]=!1,$scope.tabs[3]=!1,$scope.tabs[4]=!1,$scope.selected=0,$scope.next=function(){$scope.tabs[++$scope.selected]=!0},$scope.previous=function(){$scope.tabs[--$scope.selected]=!0},$scope.send=function(){usSpinnerService.spin("candidate-form-spinner-1"),$scope.sending=!0,$scope.next();var notes="PLEASE DO NOT DELETE OR EDIT THIS SECTION:\n**********\n***Reason:\n"+$scope.answers.reason+"\n\n***Connections:\n"+$scope.answers.connection+"\n***************";$http.post("candidate/setCandidate",{event_id:event._id,note:notes}).success(function(){$scope.sending=!1,$scope.error=!1}).error(function(){$scope.sending=!1,$scope.error=!0})},$scope.done=function(status){status=parseInt(status,10),$modalInstance.close(status?!0:!1)}}]),angular.module("invites").config(["$stateProvider","$urlRouterProvider",function($stateProvider){$stateProvider.state("invite",{url:"/invite",templateUrl:"modules/invites/views/invites.client.view.html"})}]),angular.module("invites").controller("invitesCtrl",["$scope","Authentication","$location","eventSelector","$http","$window","$modal","cacheService","previewService","usSpinnerService",function($scope,Authentication,$location,eventSelector,$http,$window,$modal,cacheService,previewService,usSpinnerService){if($scope.authentication=Authentication,$scope.authentication.user)if(_.intersection($scope.authentication.user.roles,["recruiter","admin"]).length){$scope.sidebarActiveColor="#333232",$scope.sidebarInactiveColor="#6c6969",$scope.sidebarColor=$scope.sidebarInactiveColor,$scope.sidebarOpen=!1,eventSelector.recruiterEvent||(angular.element("#invitation-submit-button").addClass("disabled"),angular.element("#invitation-preview-button").addClass("disabled"));var tempEvent=cacheService.getData("selectedEvent");tempEvent&&"Select Event"!==tempEvent||(angular.element("#invitation-submit-button").addClass("disabled"),angular.element("#invitation-preview-button").addClass("disabled"),$scope.eventWarning=$modal.open({controller:"modalCtrl",template:"<div class='modal-header'><h3 class='modal-title'>Select Event</h3></div><div class='modal-body'><p>It looks like you do not have an event selected or you did not have an event for which you are recruiting selected.  That's alright, just select the event for which you want to send an invitation before proceeding.</p><p>(The event selector is in the top right-hand corner by your name.)</p></div><div class='modal-footer'><button class='btn btn-primary' ng-click='closeWarning()'>OK</button></div>"})),$scope.recruiter_email=$scope.authentication.user.email,$scope.invite={},$scope.invite.event_name=eventSelector.selectedEvent,$scope.invite.event_id=eventSelector.postEventId,$scope.$watch(function(){return eventSelector.selectedEvent},function(){eventSelector.postEventId&&(eventSelector.recruiterEvent&&(angular.element("#invitation-submit-button").removeClass("disabled"),angular.element("#invitation-preview-button").removeClass("disabled")),$scope.invite.event_name=eventSelector.selectedEvent,$scope.invite.event_id=eventSelector.postEventId,getPreview())}),$scope.$watch(function(){return eventSelector.postEventId},function(){$scope.invite.event_id=eventSelector.postEventId,getSideTables()}),$scope.sending=!1,$scope.send=function(){$scope.sending=!0,usSpinnerService.spin("spinner-1"),angular.element("#invitation-submit-button").addClass("disabled"),$http.post("/send/evite",$scope.invite).success(function(){$scope.invite.fName="",$scope.invite.lName="",$scope.invite.email="",$scope.invite.message="",angular.element("#invitation-submit-button").removeClass("disabled"),getSideTables(),usSpinnerService.stop("spinner-1"),$scope.sending=!1}).error(function(response,status){401!==status?500!==status?(angular.element("#invitation-submit-button").removeClass("disabled"),usSpinnerService.stop("spinner-1"),$scope.sending=!1,$window.alert("There was an error sending this message.\n\nError: "+response.message+"\nIf this error continues, please <a href='/#!/problems'>report this issue</a>")):(angular.element("#invitation-submit-button").removeClass("disabled"),usSpinnerService.stop("spinner-1"),$scope.sending=!1,$window.alert("We could not connect to the server right now.\nIf this error continues, please <a href='/#!/problems'>report this issue</a>")):(angular.element("#invitation-submit-button").removeClass("disabled"),usSpinnerService.stop("spinner-1"),$scope.sending=!1,$location.path("/"))})},$scope.firstSelected=!0,$scope.secondSelected=!1,$scope.thirdSelected=!1,$scope.attendees={},$scope.attendees.list=[],$scope.invitees={},$scope.invitees.list=[],$scope.almosts={},$scope.almosts.list=[];var getSideTables=function(){if($scope.invite.event_id){var request={event_id:$scope.invite.event_id};$http.post("/recruiter/attendees",request).success(function(response){$scope.attendees.list=response,$scope.attendees.error=response.length?"":"What?  How could this be?  Nobody has accepted one of your invitations yet!?!"}).error(function(response,status){$scope.attendees.list=[],$scope.attendees.error=400===status&&"User not found or nobody the user invited has signed up to attend yet."===response.message?"What?  How could this be?  Nobody has accepted one of your invitations yet!?!":response.message}),$http.post("/recruiter/invitees",request).success(function(response){$scope.invitees.list=response,$scope.invitees.error=response.length?"":"How will anybody have be able to enjoy "+eventSelector.selectedEvent+" without wonderful people like you inviting them?  You should invite more people."}).error(function(response,status){$scope.invitees.list=[],400===status&&"User not found or nobody the user invited has signed up to attend yet."===response.message?$scope.invitees.error="How will anybody have be able to enjoy "+eventSelector.selectedEvent+" without wonderful people like you inviting them?  You should invite more people.":$scope.attendees.error=response.message}),$http.post("/recruiter/almosts",request).success(function(response){$scope.almosts.list=response,$scope.almosts.error=response.length?"":"Nobody has chosen somebody else's invitation over your invitation.  Looks like somebody is popular."}).error(function(response,status){$scope.almosts.list=[],$scope.almosts.error=400===status&&"User not found or nobody the user invited has signed up to attend yet."===response.message?"Nobody has chosen somebody else's invitation over your invitation.  Looks like somebody is popular.":response.message})}else $scope.attendees.error="You have not selected an event.  You can do so in the top right-hand corner.",$scope.invitees.error="You have not selected an event.  You can do so in the top right-hand corner.",$scope.almosts.error="You have not selected an event.  You can do so in the top right-hand corner."};getSideTables();var previewOptions={};console.log($scope.authentication),previewService.preview.recruiter_name=$scope.authentication.user.fName,previewService.preview.sender_email=$scope.authentication.user.email,previewService.preview.event_name=$scope.invite.event_name,previewService.preview.receiver_email=$scope.invite.invitee_email,previewService.preview.receiver_name=$scope.invite.fName,previewService.preview.message=$scope.invite.message,$scope.$watchCollection("invite",function(){previewService.preview.sender_email=$scope.authentication.user.email,previewService.preview.event_name=$scope.invite.event_name,previewService.preview.receiver_email=$scope.invite.invitee_email,previewService.preview.receiver_name=$scope.invite.fName,previewService.preview.message=$scope.invite.message});var getPreview=function(){var request={event_id:eventSelector.postEventId,event_name:eventSelector.selectedEvent};$http.get("/preview/invitation",{params:request}).success(function(response){previewOptions.template=response.preview,previewOptions.template="<div class='modal-header'><h3 class='modal-title'>{{eventSelector.selectedEvent}} Invitation Preview</h3></div><div class='modal-body'>"+previewOptions.template+"</div><div class='modal-footer'><button class='btn btn-primary' ng-click='closePreview()'>Got it!</button></div>"}).error(function(response){previewOptions={},previewOptions.template=response.message,previewOptions.template="<div class='modal-header'><h3 class='modal-title'>{{eventSelector.selectedEvent}} Invitation Preview</h3></div><div class='modal-body' style='overflow: auto;'>"+previewOptions.template+"</div><div class='modal-footer'><button class='btn btn-primary' ng-click='closePreview()'>Got it!</button></div>"})};$scope.togglePreview=function(){previewService.preview.modalInstance||(previewOptions.controller="modalCtrl",previewOptions.backdrop=!1,previewOptions.windowClass="frank-invite-preview-modal",previewOptions.modalDraggable=!0,previewOptions.keyboard=!1,previewService.preview.modalInstance=$modal.open(previewOptions))}}else $location.path("/");else $location.path("/signin")}]),angular.module("invites").controller("modalCtrl",["$scope","$modalInstance","eventSelector","previewService",function($scope,$modalInstance,eventSelector,previewService){$scope.closeWarning=function(){$modalInstance.dismiss("done")},$scope.previewService=previewService,$scope.recruiter_name=previewService.preview.recruiter_name,$scope.event_name=previewService.preview.event_name,$scope.receiver_name=previewService.preview.receiver_name,$scope.receiver_email=previewService.preview.receiver_email,$scope.sender_email=previewService.preview.sender_email,$scope.message=previewService.preview.message,$scope.modalInstance=previewService.preview.modalInstance,$scope.$watchCollection("previewService.preview",function(){$scope.event_name=previewService.preview.event_name,$scope.receiver_name=previewService.preview.receiver_name,$scope.receiver_email=previewService.preview.receiver_email,$scope.sender_email=previewService.preview.sender_email,$scope.message=previewService.preview.message,$scope.modalInstance=previewService.preview.modalInstance}),$scope.closePreview=function(){$modalInstance.close(),previewService.preview.modalInstance=null}}]),angular.module("core").service("previewService",[function(){this.preview={},this.preview.modalInstance=null,this.preview.recruiter_name="",this.preview.event_name="",this.preview.sender_email="",this.preview.receiver_email="",this.preview.receiver_name="",this.preview.message=""}]),angular.module("leaderboard").config(["$stateProvider","$urlRouterProvider",function($stateProvider){$stateProvider.state("leaderboard",{url:"/leaderboard",templateUrl:"modules/leaderboard/views/leaderboard.client.view.html"})}]),angular.module("leaderboard").controller("commentsCtrl",["$scope","Authentication","$timeout","$location","eventSelector","$http","$window","$modal","cacheService","$interval",function($scope,Authentication,$timeout,$location,eventSelector,$http,$window,$modal,cacheService,$interval){Authentication.user&&0!==_.intersection(Authentication.user.roles,["admin","recruiter"]).length?($scope.authentication=Authentication,$scope.editorExpanded=!1,$scope.removable=function(user_id){return 1===_.intersection($scope.authentication.user.roles,["admin"]).length?!0:user_id.toString()===$scope.authentication.user._id.toString()?!0:!1},$scope.toHumanReadable=function(time){var date=new Date(parseInt(time));return date.toLocaleDateString()+" "+date.toLocaleTimeString()},$scope.getComments=function(){eventSelector.postEventId&&$http.post("/comments/getRecruiterCommentsForEvent",{event_id:eventSelector.postEventId}).success(function(response){$scope.comments=response}).error(function(response,status){401!==status&&($scope.commentErr="Error retrieving comments.  Try refreshing the page.","No comments found!"===response.message&&($scope.commentErr=response.message),"/leaderboard"===$location.path()&&$timeout(function(){$scope.getComments()},5e3))})},$timeout($scope.getComments),$scope.$watch(function(){return eventSelector.selectedEvent},$scope.getComments),$interval($scope.getComments(),6e4)):$location.path(Authentication.user?"/":"/signin")}]),angular.module("leaderboard").controller("LeaderboardTablesCtrl",["$scope","Authentication","$http","ngTableParams","$filter","$resource","$location","eventSelector","$timeout",function($scope,Authentication,$http,ngTableParams,$filter,$resource,$location,eventSelector,$timeout){if(Authentication.user&&0!==_.intersection(Authentication.user.roles,["admin","recruiter"]).length){$scope.authentication=Authentication,$scope.userScore=0,$scope.userInvites=0,$scope.userAttendees=0,$scope.statsError=!1,$scope.mainTableFilter={displayName:""},eventSelector.recruiterEvent||(eventSelector.selectedEvent="Select Event",eventSelector.recruiterEvent=!0,eventSelector.postEventId=null),$scope.returnInt=function(value){return Math.floor(value)},$scope.getArr=function(length){return new Array(length)};var mainApi=$resource("/leaderboard/maintable",{event_id:eventSelector.postEventId},{getTable:{method:"POST",isArray:!0}}),attendingApi=$resource("/leaderboard/attendees",{event_id:eventSelector.postEventId},{getTable:{method:"POST",isArray:!0}}),invitedApi=$resource("/leaderboard/invitees",{event_id:eventSelector.postEventId},{getTable:{method:"POST",isArray:!0}}),getTables=function(){$scope.mainTableParams=new ngTableParams({page:1,count:10,filter:$scope.mainTableFilter,sorting:{place:"asc"}},{total:0,getData:function($defer,params){mainApi.getTable({event_id:eventSelector.postEventId},function(data){var filteredData=params.filter()?$filter("filter")(data,params.filter()):data,orderedData=params.sorting()?$filter("orderBy")(filteredData,params.orderBy()):data,maxInvitedFilter=$filter("orderBy")(data,"invited","reverse");$scope.maxInvited=maxInvitedFilter[0].invited;var maxAttendingFilter=$filter("orderBy")(data,"attending","reverse");$scope.maxAttending=maxAttendingFilter[0].attending,params.total(orderedData.length),$defer.resolve(orderedData.slice((params.page()-1)*params.count(),params.page()*params.count()))})},$scope:{$data:{}}}),$scope.attendingTableParams=new ngTableParams({page:1,count:10,filter:{attendeeName:""},sorting:{attendeeName:"asc"}},{total:0,getData:function($defer,params){attendingApi.getTable({event_id:eventSelector.postEventId},function(data){var filteredData=params.filter()?$filter("filter")(data,params.filter()):data,orderedData=params.sorting()?$filter("orderBy")(filteredData,params.orderBy()):data;params.total(orderedData.length),$defer.resolve(orderedData.slice((params.page()-1)*params.count(),params.page()*params.count()))})},$scope:{$data:{}}}),$scope.invitedTableParams=new ngTableParams({page:1,count:10,filter:{inviteeName:""},sorting:{inviteeName:"asc"}},{total:0,getData:function($defer,params){invitedApi.getTable(params.url,{event_id:eventSelector.postEventId},function(data){var filteredData=params.filter()?$filter("filter")(data,params.filter()):data,orderedData=params.sorting()?$filter("orderBy")(filteredData,params.orderBy()):data;params.total(orderedData.length),$defer.resolve(orderedData.slice((params.page()-1)*params.count(),params.page()*params.count()))})},$scope:{$data:{}}})};$scope.hasOwnProperty("params")||($scope.params=new ngTableParams,$scope.params.isNullInstance=!0),$scope.params.settings().$scope=$scope,$scope.smallRankHeader=!1;var getStats=function(){$http.get("/leaderboard/recruiterinfo",{params:{event_id:eventSelector.postEventId}}).success(function(response){response.place?$scope.userScore=response.place:($scope.userScore="N/A",$scope.smallRankHeader=!0),$scope.userInvites=response.invited,$scope.userAttendees=response.attending,$http.get("/events/stats",{params:{event_id:eventSelector.postEventId}}).success(function(response){$scope.capacity=response.capacity,$scope.attending=response.attending,$scope.invited=response.invited,$scope.percentInvited=Math.round($scope.invited/$scope.capacity*50),$scope.percentAttending=Math.round($scope.attending/$scope.capacity*50),$scope.percentCapacity=50}).error(function(){$scope.statsError=!0})}).error(function(response,status){401!==status&&"/leaderboard"===$location.path()&&$timeout(function(){getStats()},5e3)})};$scope.getRatio=function(){return $scope.userInvites+$scope.userAttendees===0?0:($scope.userAttendees/($scope.userInvites+$scope.userAttendees)*100).toFixed(2)};var tablesSet=!1;$scope.$watch(function(){return eventSelector.selectedEvent},function(){eventSelector.postEventId&&(getStats(),tablesSet?$timeout(function(){$scope.mainTableParams.reload(),$scope.attendingTableParams.reload(),$scope.invitedTableParams.reload()}):(getTables(),tablesSet=!0))})}else $location.path(Authentication.user?"/":"/signin")}]),angular.module("leaderboard").filter("offset",function(){return function(data,start){return start=parseInt(start,10),data.slice(start)}}),angular.module("memoboard").config(["$stateProvider","$urlRouterProvider",function($stateProvider){$stateProvider.state("franklounge",{url:"/franklounge",templateUrl:"modules/memoboard/views/memoboard.client.view.html"})}]),angular.module("memoboard").controller("memoboardCtrl",["$scope","Authentication","eventSelector","$http","$timeout","$window","$interval","$location",function($scope,Authentication,eventSelector,$http,$timeout,$window,$interval,$location){Authentication.user&&0!==_.intersection(Authentication.user.roles,["admin","recruiter","attendee"]).length?($scope.authentication=Authentication,$scope.editorExpanded=!0,$scope.removable=function(user_id){return 1===_.intersection($scope.authentication.user.roles,["admin"]).length?!0:user_id.toString()===$scope.authentication.user._id.toString()?!0:!1;

},$scope.toHumanReadable=function(time){var date=new Date(parseInt(time));return date.toLocaleDateString()+" "+date.toLocaleTimeString()},$scope.getComments=function(eventChanged){eventSelector.postEventId&&$http.post("/comments/getSocialCommentsForEvent",{event_id:eventSelector.postEventId}).success(function(response){$scope.comments=response,$scope.commentsErr=""}).error(function(response){("string"==typeof $scope.comments||eventChanged)&&($scope.comments=!1),$scope.commentsErr=response.message})},$timeout($scope.getComments),$scope.$watch(function(){return eventSelector.selectedEvent},function(){$scope.getComments(!0)}),$interval($scope.getComments(!1),6e4),$scope.interests={Arts:"img/interests/arts.png","Child Development":"img/interests/child_development.png",Conservation:"img/interests/conservation.png","Corporate Social Responsibility":"img/interests/corporate_social_responsibility.png",Corrections:"img/interests/corrections.png",Culture:"img/interests/culture.png",Education:"img/interests/education.png",Entertainment:"img/interests/entertainment.png",Environment:"img/interests/environment.png","Food & Health":"img/interests/food_&_health.png",frank:"img/interests/frank.png","Gender Equality":"img/interests/gender_equality.png",Health:"img/interests/health.png","Human Rights":"img/interests/human_rights.png","Income Disparity":"img/interests/income_disparity.png",Inspiration:"img/interests/inspiration.png","International Development":"img/interests/international_development.png",Media:"img/interests/media.png","Mental Health":"img/interests/mental_health.png",Music:"img/interests/music.png",Politics:"img/interests/politics.png",Poverty:"img/interests/poverty.png",Religion:"img/interests/religion.png",Science:"img/interests/science.png","Social Media":"img/interests/social_media.png","Solutions Journalism":"img/interests/solutions_journalism.png","Special Needs":"img/interests/special_needs.png",Technology:"img/interests/technology.png",Tobacco:"img/interests/tobacco.png",Travel:"img/interests/travel.png","Violence Prevention":"img/interests/violence_prevention.png",Water:"img/interests/water.png"},$scope.interestsSelector=[],angular.forEach($scope.interests,function(value,key){$scope.interestsSelector.push({icon:"<img src='"+value+"' />",name:key,ticked:!1})}),$scope.selectedInterests=[]):$location.path(Authentication.user?"/":"/signin")}]),angular.module("problems").config(["$stateProvider","$urlRouterProvider",function($stateProvider){$stateProvider.state("problems",{url:"/problems",templateUrl:"modules/problems/views/problems.client.view.html"})}]),angular.module("problems").controller("ProblemController",["$scope","$http","eventSelector","Authentication","$location",function($scope,$http,eventSelector,Authentication,$location){Authentication.user&&0!==_.intersection(Authentication.user.roles,["admin","recruiter","attendee"]).length?($scope.user=Authentication.user,$scope.admin=-1!==$scope.user.roles.indexOf("admin")?!0:!1,$scope.recruiter=$scope.admin||(-1!==$scope.user.roles.indexOf("recruiter")?!0:!1),$scope.problem={},$scope.problem.contact="true",$scope.submitProblem=function(){var data={subject:"Problem Reported on frankRS",event_id:eventSelector.postEventId},permissions="true"===$scope.problem.contact?"can":"cannot",message="<p>A problem was reported for the frank recruiter system.  Here are a few details:</p><br /><br /><b>Browser: </b>"+("other"!==$scope.problem.browser?$scope.problem.browser:$scope.problem.other)+"<br /><b>Version: </b>"+$scope.problem.version+"<br /><b>OS: </b>"+("other"!==$scope.problem.os?$scope.problem.os:$scope.problem.os_other)+"<br /><b>Page: </b>"+$scope.problem.page+"<br /><b>Description: </b>"+$scope.problem.description+"<br /><br /><b>***User Information***</b><br />&nbsp;&nbsp;&nbsp;&nbsp;<b>Name: </b>"+$scope.user.fName+$scope.user.lName+"<br />&nbsp;&nbsp;&nbsp;&nbsp;<b>Email: </b>"+$scope.user.email+"<br />&nbsp;&nbsp;&nbsp;&nbsp;<b>Roles: </b>"+$scope.user.roles+"<br /><br />You <b>"+permissions+"</b> reply to this message for more information.";data.message=angular.toJson(message),$http.post("/send/programmer",data).success(function(){$scope.error=!1,$scope.success=!0,$scope.problem={},$scope.problem.contact=!0}).error(function(res){$scope.success=!0,$scope.error=res.message})}):$location.path(Authentication.user?"/":"/signin")}]),angular.module("recruiter-form").config(["$stateProvider","$urlRouterProvider",function($stateProvider){$stateProvider.state("recruiter-form",{url:"/recruiter/form",templateUrl:"modules/recruiter-form/views/recruiter-form.client.view.html"})}]),angular.module("recruiter-form").controller("NewRecruiterCtrl",["$scope","$http","$timeout","$window","vcRecaptchaService","Authentication","$location",function($scope,$http,$timeout,$window,vcRecaptchaService,Authentication,$location){Authentication.user&&$location.path("/events"),$scope.recruiter={},$scope.success=!1,$scope.error=!1,$scope.submit=function(){""===vcRecaptchaService.getResponse()?$scope.error="reCAPTCHA not resolved.":($scope.recruiter["g-recaptcha-response"]=vcRecaptchaService.getResponse(),$scope.note="PLEASE DO NOT DELETE OR EDIT THIS SECTION:\n**********\n***Reason:\n"+$scope.recruiter.reason+"\n\n***Connections:\n"+$scope.recruiter.connections+"\n\n***Recruiter Skills:\n"+$scope.recruiter.skills+"\n***************",$http.post("/candidate/new/no_user",$scope.recruiter).success(function(){$scope.success=!0}).error(function(res,status){400===status?$scope.error=res.message?res.message:"No robots allowed!":500===status&&($scope.error="There was an error with our servers.  Please try again later.  If this error persists, please notify us and include a screenshot of this page.")}))}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication","$window",function($q,$location,Authentication,$window){return{responseError:function(rejection){switch(rejection.status){case 401:"User not logged in."===rejection.data.message?(Authentication.user=null,$window.user=null,$location.path("/signin")):"User does not have permission."===rejection.data.message&&$location.path("/");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication","eventSelector",function($scope,$http,$location,Authentication,eventSelector){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,eventSelector.eventSelect(),$location.path(response.updated&&response.updated!==response.created?"/":"/settings/password")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.newUser=!$scope.user.updated||$scope.user.updated===$scope.user.created,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){for(var i=0;i<$scope.user.interests.length;i++)$scope.user.interests[i]=$scope.user.interests[i].name;$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null,$scope.newUser&&$location.path("/settings/profile")}).error(function(response){$scope.error=response.message})},$scope.interests={Arts:"img/interests/arts.png","Child Development":"img/interests/child_development.png",Conservation:"img/interests/conservation.png","Corporate Social Responsibility":"img/interests/corporate_social_responsibility.png",Corrections:"img/interests/corrections.png",Culture:"img/interests/culture.png",Education:"img/interests/education.png",Entertainment:"img/interests/entertainment.png",Environment:"img/interests/environment.png","Food & Health":"img/interests/food_&_health.png",frank:"img/interests/frank.png","Gender Equality":"img/interests/gender_equality.png",Health:"img/interests/health.png","Human Rights":"img/interests/human_rights.png","Income Disparity":"img/interests/income_disparity.png",Inspiration:"img/interests/inspiration.png","International Development":"img/interests/international_development.png",Media:"img/interests/media.png","Mental Health":"img/interests/mental_health.png",Music:"img/interests/music.png",Politics:"img/interests/politics.png",Poverty:"img/interests/poverty.png",Religion:"img/interests/religion.png",Science:"img/interests/science.png","Social Media":"img/interests/social_media.png","Solutions Journalism":"img/interests/solutions_journalism.png","Special Needs":"img/interests/special_needs.png",Technology:"img/interests/technology.png",Tobacco:"img/interests/tobacco.png",Travel:"img/interests/travel.png","Violence Prevention":"img/interests/violence_prevention.png",Water:"img/interests/water.png"},$scope.interestsSelector=[],angular.forEach($scope.interests,function(value,key){$scope.interestsSelector.push(_.intersection($scope.user.interests,[key]).length?{icon:"<img src='"+value+"' />",name:key,ticked:!0}:{icon:"<img src='"+value+"' />",name:key,ticked:!1})})}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);